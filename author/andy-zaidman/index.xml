<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Andy Zaidman | Annibale Panichella</title>
    <link>/author/andy-zaidman/</link>
      <atom:link href="/author/andy-zaidman/index.xml" rel="self" type="application/rss+xml" />
    <description>Andy Zaidman</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Tue, 13 Sep 2022 09:29:14 +0200</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Andy Zaidman</title>
      <link>/author/andy-zaidman/</link>
    </image>
    
    <item>
      <title>Generating Class-Level Integration Tests Using Call Site Information</title>
      <link>/publication/ieee-tse2022/</link>
      <pubDate>Tue, 13 Sep 2022 09:29:14 +0200</pubDate>
      <guid>/publication/ieee-tse2022/</guid>
      <description>&lt;p&gt;Abstract: Search-based approaches have been used in the literature to automate the process of creating unit test cases. However, related work has shown that generated tests with high code coverage could be ineffective, i.e., they may not detect all faults or kill all injected mutants. In this paper, we propose CLING, an integration-level test case generation approach that exploits how a pair of classes, the caller and the callee, interact with each other through method calls. In particular, CLING generates integration-level test cases that maximize the Coupled Branches Criterion (CBC). Coupled branches are pairs of branches containing a branch of the caller and a branch of the callee such that an integration test that exercises the former also exercises the latter. CBC is a novel integration-level coverage criterion, measuring the degree to which a test suite exercises the interactions between a caller and its callee classes. We implemented CLING and evaluated the approach on 140 pairs of classes from five different open-source Java projects. Our results show that (1) CLING generates test suites with high CBC coverage, thanks to the definition of the test suite generation as a many-objectives problem where each couple of branches is an independent objective; (2) such generated suites trigger different class interactions and can kill on average 7.7% (with a maximum of 50%) of mutants that are not detected by tests generated randomly or at the unit level; (3) CLING can detect integration faults coming from wrong assumptions about the usage of the callee class (25 for our subject systems) that remain undetected when using automatically generated random and unit-level test suites.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Kill Them All: An Exploratory Study on the Impact of Code Observability on Mutation Testing</title>
      <link>/publication/jss2020/</link>
      <pubDate>Tue, 01 Dec 2020 17:32:54 +0200</pubDate>
      <guid>/publication/jss2020/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Good Things Come In Threes: Improving Search-based Crash Reproduction With Helper Objectives</title>
      <link>/publication/ase2020a/</link>
      <pubDate>Thu, 30 Jul 2020 22:27:46 +0200</pubDate>
      <guid>/publication/ase2020a/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Botsing, a Search-based Crash Reproduction Framework for Java</title>
      <link>/publication/ase2020-tool/</link>
      <pubDate>Sun, 05 Jul 2020 14:19:53 +0200</pubDate>
      <guid>/publication/ase2020-tool/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Crash Reproduction Using Helper Objectives</title>
      <link>/publication/gecco2020/</link>
      <pubDate>Sat, 04 Jul 2020 18:56:54 +0200</pubDate>
      <guid>/publication/gecco2020/</guid>
      <description></description>
    </item>
    
    <item>
      <title>LogChunks: A Data Set for Build Log Analysis</title>
      <link>/publication/msrdata2019/</link>
      <pubDate>Tue, 03 Mar 2020 17:08:37 +0100</pubDate>
      <guid>/publication/msrdata2019/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A Test Case Prioritization Genetic Algorithm guided by the Hypervolume Indicator</title>
      <link>/publication/ieee-tse2018f/</link>
      <pubDate>Sat, 08 Sep 2018 11:51:02 +0200</pubDate>
      <guid>/publication/ieee-tse2018f/</guid>
      <description></description>
    </item>
    
    <item>
      <title>On the Impact of Code Smells on the Energy Consumption of Mobile Applications</title>
      <link>/publication/infsoft2018a/</link>
      <pubDate>Mon, 13 Aug 2018 19:14:00 +0200</pubDate>
      <guid>/publication/infsoft2018a/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Single-objective versus Multi-Objectivized Optimization for Evolutionary Crash Reproduction</title>
      <link>/publication/ssbse2018a/</link>
      <pubDate>Fri, 20 Jul 2018 00:06:34 +0200</pubDate>
      <guid>/publication/ssbse2018a/</guid>
      <description></description>
    </item>
    
    <item>
      <title>An Investigation of Compression Techniques to Speed up Mutation Testing</title>
      <link>/publication/icst2018/</link>
      <pubDate>Fri, 20 Jul 2018 00:03:02 +0200</pubDate>
      <guid>/publication/icst2018/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The Scent of a Smell: An Extensive Comparison between Textual and Structural Smells</title>
      <link>/publication/ieee-tse2018d/</link>
      <pubDate>Tue, 10 Jul 2018 11:25:49 +0200</pubDate>
      <guid>/publication/ieee-tse2018d/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Developer Testing in The IDE: Patterns, Beliefs, And Behavior</title>
      <link>/publication/ieee-tse2018c/</link>
      <pubDate>Tue, 10 Jul 2018 11:24:46 +0200</pubDate>
      <guid>/publication/ieee-tse2018c/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Lightweight Detection of Android-specific Code Smells: the aDoctor Project</title>
      <link>/publication/saner2017b/</link>
      <pubDate>Sun, 13 Aug 2017 20:10:28 +0200</pubDate>
      <guid>/publication/saner2017b/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Software-Based Energy Profiling of Android Apps: Simple, Efficient and Reliable</title>
      <link>/publication/saner2017a/</link>
      <pubDate>Sun, 13 Aug 2017 20:08:32 +0200</pubDate>
      <guid>/publication/saner2017a/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Speeding-Up Mutation Testing via Data Compression and State Infection</title>
      <link>/publication/icstw2017/</link>
      <pubDate>Sun, 13 Aug 2017 20:06:48 +0200</pubDate>
      <guid>/publication/icstw2017/</guid>
      <description></description>
    </item>
    
    <item>
      <title>PETrA: a Software-Based Tool for Estimating the Energy Profile of Android Applications</title>
      <link>/publication/icse2017-tool/</link>
      <pubDate>Sun, 13 Aug 2017 19:37:11 +0200</pubDate>
      <guid>/publication/icse2017-tool/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A Textual-based Technique for Smell Detection</title>
      <link>/publication/icpc2016/</link>
      <pubDate>Thu, 18 Aug 2016 07:52:50 +0200</pubDate>
      <guid>/publication/icpc2016/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Automatic Test Case Generation: What If Test Code Quality Matters?</title>
      <link>/publication/issta2016/</link>
      <pubDate>Thu, 18 Aug 2016 07:45:36 +0200</pubDate>
      <guid>/publication/issta2016/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The impact of test case summaries on bug fixing performance: An empirical investigation</title>
      <link>/publication/icse2016/</link>
      <pubDate>Thu, 18 Aug 2016 07:43:26 +0200</pubDate>
      <guid>/publication/icse2016/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Regression Testing | Annibale Panichella</title>
    <link>/tag/regression-testing/</link>
      <atom:link href="/tag/regression-testing/index.xml" rel="self" type="application/rss+xml" />
    <description>Regression Testing</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Fri, 11 Nov 2022 11:21:45 +0200</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Regression Testing</title>
      <link>/tag/regression-testing/</link>
    </image>
    
    <item>
      <title>Continuous Integration and Delivery practices for Cyber- Physical systems: An interview-based study</title>
      <link>/publication/acm-tosem2022b/</link>
      <pubDate>Fri, 11 Nov 2022 11:21:45 +0200</pubDate>
      <guid>/publication/acm-tosem2022b/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Single and Multi-objective Test Cases Prioritization for Self-driving Cars in Virtual Environments</title>
      <link>/publication/acm-tosem2022/</link>
      <pubDate>Mon, 04 Apr 2022 11:21:45 +0200</pubDate>
      <guid>/publication/acm-tosem2022/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Multi-objective Test Case Selection Through Linkage Learning-driven Crossover</title>
      <link>/publication/ssbse2021a/</link>
      <pubDate>Tue, 29 Jun 2021 09:16:23 +0200</pubDate>
      <guid>/publication/ssbse2021a/</guid>
      <description>&lt;h1 id=&#34;abstract&#34;&gt;Abstract&lt;/h1&gt;
&lt;p&gt;Test case selection (TCS) aims to select a subset of the test suite to run for regression testing. The selection is typically based on past coverage and execution cost data. Researchers have successfully used multi-objective evolutionary algorithms (MOEAs), such as NSGA-II and its variants, to solve the problem. These MOEAs use traditional crossovers to create new candidate solutions during the search. Recent studies in evolutionary computation showed that more effective recombinations can be made by using linkage learning. Inspired by these recent advances in this field, we propose a new variant of NSGA-II, called L2-NSGA, that uses linkage learning to optimize test case selection. In particular, we use an unsupervised clustering algorithm to infer promising patterns among the solutions (sub-test suites). Then, these patterns are used in the next iterations of L2-NSGA to create solutions that contain/preserve these inferred patterns. Our results show that our customizations make NSGA-II more effective for test case selection. Furthermore, the test suite sub-sets generated by L2-NSGA are less expensive and more effective (detect more faults) than those generated by MOEAs used in the literature for regression testing.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Log-based Slicing for System-level Test Cases</title>
      <link>/publication/issta2021/</link>
      <pubDate>Mon, 19 Apr 2021 09:03:56 +0200</pubDate>
      <guid>/publication/issta2021/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A Test Case Prioritization Genetic Algorithm guided by the Hypervolume Indicator</title>
      <link>/publication/ieee-tse2018f/</link>
      <pubDate>Sat, 08 Sep 2018 11:51:02 +0200</pubDate>
      <guid>/publication/ieee-tse2018f/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Improving Multi-Objective Search Based Test Suite Optimization through Diversity Injection</title>
      <link>/publication/tse2015/</link>
      <pubDate>Sun, 19 Jul 2015 23:46:36 +0200</pubDate>
      <guid>/publication/tse2015/</guid>
      <description>&lt;p&gt;Abstract:
A way to reduce the cost of regression testing consists of selecting or prioritizing subsets of test cases from a test suite according to some criteria. Besides greedy algorithms, cost cognizant additional greedy algorithms, multi-objective optimization algorithms, and multi-objective genetic algorithms (MOGAs), have also been proposed to tackle this problem. However, previous studies have shown that there is no clear winner between greedy and MOGAs, and that their combination does not necessarily produce better results. In this paper we show that the optimality of MOGAs can be significantly improved by diversifying the solutions (sub-sets of the test suite) generated during the search process. Specifically, we introduce a new MOGA, coined as DIversity based Genetic Algorithm (DIV-GA), based on the mechanisms of orthogonal design and orthogonal evolution that increase diversity by injecting new orthogonal individuals during the search process. Results of an empirical study conducted on eleven programs show that DIV-GA outperforms both greedy algorithms and the traditional MOGAs from the optimality point of view. Moreover, the solutions (sub-sets of the test suite) provided by DIV-GA are able to detect more faults than the other algorithms, while keeping the same test execution cost.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

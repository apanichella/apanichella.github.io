<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Search-based Software Engineering on Annibale Panichella</title>
    <link>https://apanichella.github.io/tags/search-based-software-engineering/</link>
    <description>Recent content in Search-based Software Engineering on Annibale Panichella</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Wed, 26 Jun 2019 10:29:32 +0200</lastBuildDate>
    
	<atom:link href="https://apanichella.github.io/tags/search-based-software-engineering/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Search-Based-LDA</title>
      <link>https://apanichella.github.io/tools/ssbse-lda/</link>
      <pubDate>Wed, 26 Jun 2019 10:29:32 +0200</pubDate>
      
      <guid>https://apanichella.github.io/tools/ssbse-lda/</guid>
      <description>A Systematic Comparison of Search Algorithms for Topic Modelling - A Study on Duplicate Bug Report Identification
Author Annibale Panichella
Venue SSBSE 2019
Abstract Latent Dirichlet Allocation (LDA) has been used to support many software engineering tasks. Previous studies showed that default settings lead to sub-optimal topic modeling with a dramatic impact on the performance of such approaches in terms of precision and recall. For this reason, researchers used search algorithms (e.</description>
    </item>
    
    <item>
      <title>Effective and Efficient API Misuse Detection via Exception Propagation and Search-based Testing</title>
      <link>https://apanichella.github.io/publication/issta2019/</link>
      <pubDate>Wed, 01 May 2019 20:22:51 +0200</pubDate>
      
      <guid>https://apanichella.github.io/publication/issta2019/</guid>
      <description>Abstract : Application Programming Interfaces (APIs) typically come with (implicit) usage constraints. The violations of these constraints (API misuses) can lead to software crashes. Even though there are several tools that can detect API misuses, most of them suffer from a very high rate of false positives. We introduce Catcher, a novel API misuse detection approach that combines static exception propagation analysis with automatic search-based test case generation to effectively and efficiently pinpoint crash-prone API misuses in client applications.</description>
    </item>
    
    <item>
      <title>A Systematic Comparison of Search Algorithms for Topic Modelling - A Study on Duplicate Bug Report Identification</title>
      <link>https://apanichella.github.io/publication/ssbse2019/</link>
      <pubDate>Mon, 29 Apr 2019 23:16:23 +0200</pubDate>
      
      <guid>https://apanichella.github.io/publication/ssbse2019/</guid>
      <description>Abstract Latent Dirichlet Allocation (LDA) has been used to support many software engineering tasks. Previous studies showed that default settings lead to sub-optimal topic modeling with a dramatic impact on the performance of such approaches in terms of precision and recall. For this reason, researchers used search algorithms (e.g., genetic algorithms) to automatically configure topic models in an unsupervised fashion. While previous work showed the ability of individual search algorithms in finding near-optimal configurations, it is not clear to what extent the choice of the meta-heuristic matters for SE tasks.</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Search-based software engineering on Annibale Panichella</title>
    <link>https://apanichella.github.io/tags/search-based-software-engineering/</link>
    <description>Recent content in Search-based software engineering on Annibale Panichella</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Fri, 17 Apr 2020 17:32:54 +0200</lastBuildDate>
    
	<atom:link href="https://apanichella.github.io/tags/search-based-software-engineering/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Automated Repair of Feature Interaction Failures in Automated Driving Systems</title>
      <link>https://apanichella.github.io/publication/issta2020/</link>
      <pubDate>Fri, 17 Apr 2020 17:32:54 +0200</pubDate>
      
      <guid>https://apanichella.github.io/publication/issta2020/</guid>
      <description>Abstract: The rise in popularity of machine learning (ML), and deep learning in particular, has both led to optimism about achievements of artificial intelligence, as well as concerns about possible weaknesses and vulnerabilities of ML pipelines. Within the software engineering community, this has led to a considerable body of work on ML testing techniques, including white- and black-box testing for ML models. This means the oracle problem needs to be addressed; for supervised ML applications, oracle information is indeed available in the form of dataset “ground truth”, that encodes input data with corresponding desired output labels.</description>
    </item>
    
    <item>
      <title>Testing with Fewer Resources: An Adaptive Approach to Performance-Aware Test Case Generation</title>
      <link>https://apanichella.github.io/publication/ieee-tse2019/</link>
      <pubDate>Wed, 09 Oct 2019 09:51:33 +0200</pubDate>
      
      <guid>https://apanichella.github.io/publication/ieee-tse2019/</guid>
      <description>Abstract: Automated test case generation is an effective technique to yield high-coverage test suites. While the majority of research effort has been devoted to satisfying coverage criteria, a recent trend emerged towards optimizing other non-coverage aspects. In this regard, runtime and memory usage are two essential dimensions: less expensive tests reduce the resource demands for the generation process and later regression testing phases. This study shows that performance-aware test case generation requires solving two main challenges: providing a good approximation of resource usage with minimal overhead and</description>
    </item>
    
    <item>
      <title>Incremental Control Dependency Frontier Exploration for Many-Criteria Test Case Generation</title>
      <link>https://apanichella.github.io/publication/ssbse2018b/</link>
      <pubDate>Fri, 20 Jul 2018 00:07:54 +0200</pubDate>
      
      <guid>https://apanichella.github.io/publication/ssbse2018b/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Testing Autonomous Cars for Feature Interaction Failures using Many-Objective Search</title>
      <link>https://apanichella.github.io/publication/ase2018/</link>
      <pubDate>Fri, 20 Jul 2018 00:01:56 +0200</pubDate>
      
      <guid>https://apanichella.github.io/publication/ase2018/</guid>
      <description></description>
    </item>
    
    <item>
      <title>LIPS vs MOSA: a Replicated Empirical Study on Automated Test Case Generation</title>
      <link>https://apanichella.github.io/publication/ssbse2017/</link>
      <pubDate>Thu, 13 Jul 2017 20:03:02 +0200</pubDate>
      
      <guid>https://apanichella.github.io/publication/ssbse2017/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Improving Multi-Objective Search Based Test Suite Optimization through Diversity Injection</title>
      <link>https://apanichella.github.io/publication/tse2015/</link>
      <pubDate>Sun, 19 Jul 2015 23:46:36 +0200</pubDate>
      
      <guid>https://apanichella.github.io/publication/tse2015/</guid>
      <description>Abstract: A way to reduce the cost of regression testing consists of selecting or prioritizing subsets of test cases from a test suite according to some criteria. Besides greedy algorithms, cost cognizant additional greedy algorithms, multi-objective optimization algorithms, and multi-objective genetic algorithms (MOGAs), have also been proposed to tackle this problem. However, previous studies have shown that there is no clear winner between greedy and MOGAs, and that their combination does not necessarily produce better results.</description>
    </item>
    
  </channel>
</rss>